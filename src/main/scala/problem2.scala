/* Problem 2
* http://projecteuler.net/index.php?section=problems&id=2
*
* Each new term in the Fibonacci sequence is generated by adding the
* previous two terms. By starting with 1 and 2, the first 10 terms will be:
*
* 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
*
* By considering the terms in the Fibonacci sequence whose values do not exceed
* four million, find the sum of the even-valued terms.
*
*/
object Problem2 {
  def main(args: Array[String]) {
    test();
    println(fibAddEvensUpTo(4000000))
  }

  def test() {
    assert(fibAddEvensUpTo(50)==44)
  }

  def fibAddEvensUpTo(limit: Int): Int = {
    var sum=2
    var cur=2
    var prev=1
    var tmp=0

    while (cur<limit) {
        tmp = cur + prev
        if (tmp % 2 == 0 ) sum+=tmp
        prev = cur
        cur = tmp
    }
    sum
  }

}

// vim: set ts=4 sw=4 et:
